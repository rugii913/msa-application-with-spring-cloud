server:
  port: 0 # Spring Boot의 random port 지원
  servlet:
    context-path: /user-service

spring:
  application:
    name: user-service
  datasource: # 강의에서는 이 datasource 설정을 하지 않음, H2 1.4 미만 버전에서 자동 설정으로 잡아주는 jdbc:h2:mem:testdb를 사용함
    driver-class-name: org.h2.Driver
    url: jdbc:h2:~/msa-example-user-service
    username: sa
    password:
  h2:
    console:
      enabled: true
      #settings:
        #web-allow-others: true # 강의와는 다르게 외부에서 접속할 일이 없다고 판단하여 주석 처리함
      path: /h2-console # 명시하지 않아도 기본값 /h2-console
  jpa: # embedded DB를 사용할 경우 명시하지 않아도 기본 create-drop이라고 적혀있으나, 동작하지 않았기에 일부러 명시함
    hibernate:
      ddl-auto: create-drop

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true # Eureka 서버로부터 인스턴스들의 정보를 주기적으로 받음
    service-url: # Eureka 서버의 위치를 지정
      defaultZone: http://127.0.0.1:8761/eureka # 이 endpoint에 microservice 정보를 등록할 것
  instance:
    # 같은 microservice가 여러 개 작동할 때도 각 인스턴스를 식별하기 위한 instance-id 부여
    #instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}} #cf. ${spring.cloud.client.hostname}로 작성하면 IP 주소 활용
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

greeting:
  message: Welcome to the simple e-commerce application!
